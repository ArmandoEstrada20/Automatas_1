const fs = require('fs');

const nombreArchivo = 'database.txt';
const Errores = 'logErrores.txt';
const hdArchivo = ['nick','matricula', 'facu', 'carrera', 'promedio', 'edad', 'correo'];
const tipoDatos = {'nick':'string', 'matricula':'number','facu':'string', 'carrera':'string',
    'promedio':'float', 'edad':'number', 'correo':'string'};
const correoVal = /[^@]+@[^.]+\..+/;

//Función para validar el tipo de dato
function validacionTD(dato, tipo){
    switch(tipo){
        case 'string':
            return typeof dato === 'string';
        case'number':
            return !isNaN(dato);
        case 'float':
            return !isNaN(dato);
        default:
            return false;
    }
}

//Verificamos si el archivo esta creado.
if(!fs.existsSync(nombreArchivo)){
    //En caso de que no exista, lo creamos.
    fs.writeFileSync(nombreArchivo, '', 'utf8');
    console.log(`El archivo ${filename} ha sido creado.`);
}

let errorLog = '';

fs.readFile('database.txt', 'utf8', (err, data) => {
    if(err){
        console.error(err);
        return;
    }
  var cadena_split = data.split('\n');
  const top = cadena_split[0].split(",")
  console.log(top);

  if(hdArchivo.length != top.length){
    errorLog += `Error: la cantidad de las columnas no coincide...\n`;
  }

  for(let i=1; i < cadena_split.length; i++){
        var query = cadena_split[i].split(",");
        //Valida la cantidad de columnas
        if(hdArchivo.length !== query.length){
            errorLog += `Error en el renglon ${i}: Datos incorrectos o incompletos\n`;
            continue;
        }
        //Valida que todas las columnas tengan datos
        if(query.some(cell => cell.trim() === '')){
            errorLog += `Error en el renglon ${i}: Datos incorrectos o incompletos\n`;
            continue;
        }

        //Valida que los tipos de datos correspondan
        for(let r=0; r < query.length; r++){
            if(!validacionTD(query[r], tipoDatos[hdArchivo[r]])){
                errorLog += `Error en el renglon ${i}, columna ${hdArchivo[r]}: Tipo de dato incorrecto\n`;
                continue;
            }
        }
        
        //Valida el tipo de dato en el correo
        if (!correoVal.test(query[6])) {
            console.log("\n"+"Renglon " + i + " : dato incorrecto en columna correo."+ query[6]);
            errorLog += `Renglon  ${i} : ${cadena_split[i]} error en la dirección de correo.\n`;
            continue;
        }

        console.log("Renglon " + i + " : " + cadena_split[i]);
        query.forEach(function(queryData, index){
            console.log(top[index] + ":" + queryData);
        });
    }

    //Creación del nuevo archivo para el registro de los errores
    if(errorLog){
        fs.writeFileSync(Errores, errorLog, 'utf8');
        console.log(`Los errores fueron registrados en ${Errores}`);
    } else {
        console.log("No se registraron errores...");
    }
});
